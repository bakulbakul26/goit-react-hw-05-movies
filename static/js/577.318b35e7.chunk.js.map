{"version":3,"file":"static/js/577.318b35e7.chunk.js","mappings":"0PACA,EAAgC,4BAAhC,EAAuE,uBAAvE,EAA2G,yBAA3G,EAAgJ,wB,SCyChJ,EArCa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,6GAEKC,EAAAA,EAAAA,IAAA,6CACiBP,EADjB,sDAFL,OAEZQ,EAFY,OAKlBJ,EAAYI,EAASC,KAAKC,MALR,gDAOlBC,QAAQC,MAAM,4BAAd,MAPkB,yDAAH,qDAWnBN,GACD,GAAE,CAACN,KAGF,gBAAKa,UAAWC,EAAhB,UACE,wBACGX,EAASY,KAAI,SAAAC,GAAK,OACjB,gBAAmBH,UAAWC,EAA9B,WACE,gBACEG,IAAG,yCAAoCD,EAAME,cAC7CC,IAAKH,EAAMI,KACXP,UAAWC,KAEb,cAAGD,UAAWC,EAAd,SAA8BE,EAAMI,SAN7BJ,EAAMK,GADE,OAa1B,C,8ICvCD,GAAgB,UAAY,0BAA0B,MAAQ,sBAAsB,cAAgB,8BAA8B,WAAa,2BAA2B,aAAe,6BAA6B,WAAa,2BAA2B,UAAY,0BAA0B,YAAc,4BAA4B,aAAe,6BAA6B,WAAa,2BAA2B,cAAgB,8BAA8B,KAAO,qBAAqB,cAAc,6B,SCkE1f,EA7De,WACb,OAAsCnB,EAAAA,EAAAA,UAAS,IAA/C,eAAOoB,EAAP,KAAoBC,EAApB,KACA,GAA0CrB,EAAAA,EAAAA,UAAS,IAAnD,eAAOsB,EAAP,KAAsBC,EAAtB,KACA,GAAwBvB,EAAAA,EAAAA,UAAS,MAA1BwB,GAAP,eAMMC,EAAkB,mCAAG,WAAMC,GAAN,8EACzBA,EAAMC,iBADmB,kBAGAtB,EAAAA,EAAAA,IAAA,mGACuEe,IAJvE,OAGjBd,EAHiB,OAMvBiB,EAAiBjB,EAASC,KAAKqB,SANR,gDAQvBnB,QAAQC,MAAM,0BAAd,MARuB,yDAAH,sDAYxB,OACE,iBAAKC,UAAWkB,EAAAA,UAAhB,WACE,eAAIlB,UAAWkB,EAAAA,MAAf,4BACA,kBAAMlB,UAAWkB,EAAAA,cAAsBC,SAAUL,EAAjD,WACE,kBACEd,UAAWkB,EAAAA,WACXE,KAAK,OACLC,MAAOZ,EACPa,SAxBwB,SAAAP,GAC9BL,EAAeK,EAAMQ,OAAOF,MAC7B,KAwBK,mBAAQrB,UAAWkB,EAAAA,aAAqBE,KAAK,SAA7C,wBAIF,eAAIpB,UAAWkB,EAAAA,WAAf,SACGP,EAAcT,KAAI,SAAAsB,GAAK,OACtB,eAAmBxB,UAAWkB,EAAAA,UAA9B,UACE,SAAC,KAAD,CAAMO,GAAE,kBAAaD,EAAMhB,IAAMR,UAAWkB,EAAAA,UAA5C,UACE,eAAIlB,UAAWkB,EAAAA,WAAf,SAAmCM,EAAME,OAASF,EAAMjB,UAFnDiB,EAAMhB,GADO,MAQzBK,IACC,4BACE,wBAAKA,EAAca,OAASb,EAAcN,QAC1C,gBACEH,IAAG,yCAAoCS,EAAcc,aACrDrB,IAAKO,EAAca,OAASb,EAAcN,KAC1CP,UAAWkB,EAAAA,eAEb,uBAAIL,EAAce,YAElB,SAACC,EAAA,QAAD,CAAM1C,QAAS0B,EAAcL,UAKtC,C","sources":["webpack://react-homework-template/./src/components/cast/Cast.module.css?6cbd","components/cast/Cast.jsx","webpack://react-homework-template/./src/pages/movies/Movies.module.css?c186","pages/movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castContainer\":\"Cast_castContainer__WQvPg\",\"castItem\":\"Cast_castItem__mogLp\",\"actorImage\":\"Cast_actorImage__6ebPK\",\"actorName\":\"Cast_actorName__ISDvr\"};","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [castData, setCastData] = useState([]);\n\n  useEffect(() => {\n    const fetchCastData = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=1f189cc65d8faa305307626e5a4d4071`\n        );\n        setCastData(response.data.cast);\n      } catch (error) {\n        console.error('Error fetching cast data:', error);\n      }\n    };\n\n    fetchCastData();\n  }, [movieId]);\n\n  return (\n    <div className={css.castContainer}>\n      <ul>\n        {castData.map(actor => (\n          <li key={actor.id} className={css.castItem}>\n            <img\n              src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\n              alt={actor.name}\n              className={css.actorImage}\n            />\n            <p className={css.actorName}>{actor.name}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Movies_container__nrZs1\",\"title\":\"Movies_title__YobY0\",\"formContainer\":\"Movies_formContainer__oKmGf\",\"inputField\":\"Movies_inputField__o2U9S\",\"submitButton\":\"Movies_submitButton__72oG-\",\"moviesList\":\"Movies_moviesList__xFw9Z\",\"movieItem\":\"Movies_movieItem__IhpZC\",\"moviePoster\":\"Movies_moviePoster__R9cYU\",\"movieDetails\":\"Movies_movieDetails__7Md0p\",\"movieTitle\":\"Movies_movieTitle__dvRqr\",\"movieOverview\":\"Movies_movieOverview__392Y-\",\"link\":\"Movies_link__XMa7X\",\"active-link\":\"Movies_active-link__Vbxej\"};","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Cast from 'components/cast/Cast';\nimport styles from './Movies.module.css';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [selectedMovie] = useState(null);\n\n  const handleSearchInputChange = event => {\n    setSearchQuery(event.target.value);\n  };\n\n  const handleSearchSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/search/movie?api_key=1f189cc65d8faa305307626e5a4d4071&query=${searchQuery}`\n      );\n      setSearchResults(response.data.results);\n    } catch (error) {\n      console.error('Error searching movies:', error);\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <h1 className={styles.title}>Search Movies</h1>\n      <form className={styles.formContainer} onSubmit={handleSearchSubmit}>\n        <input\n          className={styles.inputField}\n          type=\"text\"\n          value={searchQuery}\n          onChange={handleSearchInputChange}\n        />\n        <button className={styles.submitButton} type=\"submit\">\n          Search\n        </button>\n      </form>\n      <ul className={styles.moviesList}>\n        {searchResults.map(movie => (\n          <li key={movie.id} className={styles.movieItem}>\n            <Link to={`/movies/${movie.id}`} className={styles.movieLink}>\n              <h2 className={styles.movieTitle}>{movie.title || movie.name}</h2>\n            </Link>\n          </li>\n        ))}\n      </ul>\n      {selectedMovie && (\n        <div>\n          <h2>{selectedMovie.title || selectedMovie.name}</h2>\n          <img\n            src={`https://image.tmdb.org/t/p/w300${selectedMovie.poster_path}`}\n            alt={selectedMovie.title || selectedMovie.name}\n            className={styles.moviePoster}\n          />\n          <p>{selectedMovie.overview}</p>\n          {/* Wyświetlamy obsadę filmu na tej samej stronie */}\n          <Cast movieId={selectedMovie.id} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["movieId","useParams","useState","castData","setCastData","useEffect","fetchCastData","axios","response","data","cast","console","error","className","css","map","actor","src","profile_path","alt","name","id","searchQuery","setSearchQuery","searchResults","setSearchResults","selectedMovie","handleSearchSubmit","event","preventDefault","results","styles","onSubmit","type","value","onChange","target","movie","to","title","poster_path","overview","Cast"],"sourceRoot":""}