{"version":3,"file":"static/js/605.058720d9.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/cast/Cast.module.css?6cbd","components/cast/Cast.jsx","webpack://react-homework-template/./src/components/reviews/Reviews.module.css?9ce4","components/reviews/Reviews.jsx","webpack://react-homework-template/./src/pages/moviedetails/MovieDetails.module.css?2636","pages/moviedetails/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castContainer\":\"Cast_castContainer__WQvPg\",\"castItem\":\"Cast_castItem__mogLp\",\"actorImage\":\"Cast_actorImage__6ebPK\",\"actorName\":\"Cast_actorName__ISDvr\"};","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [castData, setCastData] = useState([]);\n\n  useEffect(() => {\n    const fetchCastData = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=1f189cc65d8faa305307626e5a4d4071`\n        );\n        setCastData(response.data.cast);\n      } catch (error) {\n        console.error('Error fetching cast data:', error);\n      }\n    };\n\n    fetchCastData();\n  }, [movieId]);\n\n  return (\n    <div className={css.castContainer}>\n      <ul>\n        {castData.map(actor => (\n          <li key={actor.id} className={css.castItem}>\n            <img\n              src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\n              alt={actor.name}\n              className={css.actorImage}\n            />\n            <p className={css.actorName}>{actor.name}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"reviewsContainer\":\"Reviews_reviewsContainer__A4aGr\",\"reviewItem\":\"Reviews_reviewItem__dyMLo\",\"reviewAuthor\":\"Reviews_reviewAuthor__eNx0E\"};","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport css from './Reviews.module.css';\n\nconst Reviews = ({ movieId }) => {\n  const [reviewsData, setReviewsData] = useState([]);\n\n  useEffect(() => {\n    const fetchReviewsData = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=1f189cc65d8faa305307626e5a4d4071`\n        );\n        setReviewsData(response.data.results);\n      } catch (error) {\n        console.error('Error fetching reviews data:', error);\n      }\n    };\n\n    fetchReviewsData();\n  }, [movieId]);\n\n  return (\n    <div className={css.reviewsContainer}>\n      {reviewsData.length === 0 ? (\n        <p>We don't have any reviews for this movie</p>\n      ) : (\n        <ul>\n          {reviewsData.map(review => (\n            <li key={review.id} className={css.reviewItem}>\n              <p className={css.reviewAuthor}>Author: {review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieDetailsContainer\":\"MovieDetails_movieDetailsContainer__PSt5M\",\"movieTitle\":\"MovieDetails_movieTitle__63q9W\",\"moviePoster\":\"MovieDetails_moviePoster__N7t73\",\"movieInfoContainer\":\"MovieDetails_movieInfoContainer__GOtum\",\"filmData\":\"MovieDetails_filmData__8m1gY\",\"movieOverview\":\"MovieDetails_movieOverview__aCVZh\",\"viewLinksContainer\":\"MovieDetails_viewLinksContainer__mMsBA\",\"viewLink\":\"MovieDetails_viewLink__lAZWc\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport css from './MovieDetails.module.css';\nimport Cast from 'components/cast/Cast';\nimport Reviews from 'components/reviews/Reviews';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState({});\n  const [showCast, setShowCast] = useState(false);\n  const [showReviews, setShowReviews] = useState(false);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}?api_key=1f189cc65d8faa305307626e5a4d4071`\n        );\n        setMovieDetails(response.data);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  const handleCastClick = () => {\n    setShowCast(true);\n    setShowReviews(false);\n  };\n\n  const handleReviewsClick = () => {\n    setShowCast(false);\n    setShowReviews(true);\n  };\n\n  return (\n    <div className={css.movieDetailsContainer}>\n      <h1 className={css.movieTitle}>\n        {movieDetails.title || movieDetails.name}\n      </h1>\n      <div className={css.movieInfoContainer}>\n        <img\n          src={`https://image.tmdb.org/t/p/w300${movieDetails.poster_path}`}\n          alt={movieDetails.title || movieDetails.name}\n          className={css.moviePoster}\n        />\n        <div>\n          <p className={css.movieOverview}>{movieDetails.overview}</p>\n          <div className={css.filmData}>\n            <p>Release Date: {movieDetails.release_date}</p>\n            <p>Vote Average: {movieDetails.vote_average}</p>\n            <p>Vote Count: {movieDetails.vote_count}</p>\n          </div>\n        </div>\n      </div>\n\n      <div className={css.viewLinksContainer}>\n        {/* Toggle the state to show/hide the cast and reviews */}\n        <button onClick={handleCastClick} className={css.viewLink}>\n          Cast\n        </button>\n        <button onClick={handleReviewsClick} className={css.viewLink}>\n          Reviews\n        </button>\n      </div>\n\n      {/* Render the Cast component only if showCast state is true */}\n      {showCast && <Cast movieId={movieId} />}\n\n      {/* Render the Reviews component only if showReviews state is true */}\n      {showReviews && <Reviews movieId={movieId} />}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["movieId","useParams","useState","castData","setCastData","useEffect","fetchCastData","axios","response","data","cast","console","error","className","css","map","actor","src","profile_path","alt","name","id","reviewsData","setReviewsData","fetchReviewsData","results","length","review","author","content","movieDetails","setMovieDetails","showCast","setShowCast","showReviews","setShowReviews","fetchMovieDetails","title","poster_path","overview","release_date","vote_average","vote_count","onClick","Cast","Reviews"],"sourceRoot":""}